{"version":3,"sources":["../../src/state.ts","img/bank.svg","img/funds.svg","img/list.svg","img/settings.svg","constants.ts","components/Navigation.tsx","components/MetaTags.tsx","components/PageSizeWrapper.tsx","config.ts","api/index.ts","hooks/useStoredGames.ts","utils.ts","pages/Home/index.tsx","pages/Funds/SendMoneyModal.tsx","pages/Funds/GameCode.tsx","pages/Funds/index.tsx","pages/Bank/ValuePlayerForm.tsx","pages/Bank/GiveFreeParking.tsx","pages/Bank/InitialiseGame.tsx","pages/Bank/index.tsx","pages/History/index.tsx","pages/Settings/RenamePlayerModal.tsx","pages/Settings/DeletePlayerModal.tsx","pages/Settings/EndGameConfirmDialog.tsx","pages/Settings/index.tsx","pages/Join/index.tsx","logic/GameHandler.ts","hooks/useGameHandler.ts","App.tsx","serviceWorker.ts","index.tsx","../../src/index.ts","img/banner.png"],"names":["players","freeParkingBalance","open","Object","assign","_extends","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","fill","height","width","_ref3","x","y","points","_ref","svgRef","title","props","enableBackground","viewBox","ref","ForwardRef","forwardRef","d","siteUrl","routePaths","home","join","newGame","funds","bank","history","settings","pageMeta","titlePrefix","description","index","Navigation","inGame","isBanker","currentPath","usePath","navbarLinks","path","active","icon","FundsIcon","ListIcon","BankIcon","SettingsIcon","goTo","location","navigate","Navbar","bg","variant","sticky","className","Container","Brand","onClick","src","BannerImage","alt","style","cursor","Nav","filter","link","map","Icon","Link","href","Button","MetaTags","route","children","configPageMeta","useMetaTags","charset","lang","metas","name","content","links","rel","type","openGraph","image","site_name","PageSizeWrapper","Row","Col","api","root","process","joinGame","gameId","a","fetch","config","method","headers","body","JSON","stringify","response","status","json","Promise","resolve","Error","getGameStatus","userToken","abortController","Authorization","signal","useStoredGames","getStatuses","useState","AbortController","useLocalStorage","storedGames","setStoredGames","gameStatuses","setGameStatuses","storeGame","playerId","game","time","DateTime","local","toISO","useEffect","forEach","current","then","g","reduce","acc","curr","catch","error","console","abort","storedGamesWithDetail","formatCurrency","value","toString","replace","Home","onGameSetup","useTitle","bannerImage","size","sort","b","Card","Body","float","fromISO","toFormat","p1","p2","player","Badge","banker","balance","block","SendMoneyModal","recipient","proposeTransaction","onClose","amount","setAmount","submitError","setSubmitError","Modal","show","onHide","centered","Header","closeButton","Title","InputGroup","Prepend","Text","FormControl","onChange","event","currentTarget","int","parseInt","isNaN","Form","color","GameCode","clipboard","useClipboard","copiedTimeout","copyTooltipTarget","useRef","copy","Overlay","copied","placement","Tooltip","id","Funds","isGameOpen","setRecipient","useModal","me","showSendMoneyModal","hideSendMoneyModal","find","p","undefined","ValuePlayerForm","label","submitText","onSubmit","identifier","toLowerCase","selectedPlayer","setSelectedPlayer","valid","htmlFor","DropdownButton","Dropdown","Item","Append","disabled","GiveFreeParking","as","ValueModal","submitAmount","InitialiseGame","hideModal","showModal","Bank","hasATransactionBeenMade","getEventDetails","previousState","nextState","detail","colour","playerReceiving","to","playerGiving","from","playerNameBeforeRename","playerNameAfterRename","playerName","History","events","currentGameState","defaultGameState","details","calculateGameState","currentEventDetails","reverse","eventDetail","background","RenamePlayerModal","proposePlayerNameChange","setName","e","DeletePlayerModal","proposePlayerDelete","Footer","EndGameConfirmDialog","proposeGameEnd","Settings","proposeGameOpenStateChange","actioningPlayer","setActioningPlayer","hideNameChangeModal","showNameChangeModal","hideDeletePlayerModal","showDeletePlayerModal","hideEndGameConfirmModal","showEndGameConfirmModal","Table","striped","bordered","hover","role","aria-label","Join","loading","setLoading","setGameId","gameError","setGameError","nameError","setNameError","isAStoredGame","storedGame","r","createGame","result","log","finally","Group","Label","Control","placeholder","onKeyDown","GameHandler","onGameStateChange","onDisplayMessage","webSocket","gameState","gameEnd","reason","close","webSocketAPIRoot","WebSocket","onmessage","onWebSocketMessage","bind","addEventListener","message","send","wasClean","actionedBy","submitEvent","incomingMessage","parse","data","push","inPlayers","gameEnded","hide","cogoToast","info","position","hideAfter","useGameHandler","gameHandler","setGameHandler","updateState","forceUpdate","useCallback","initialize","clear","authInfo","getState","amIABanker","getEvents","actions","wrapRoute","child","App","onGameDestroy","values","NotFound","routes","routeResult","useRoutes","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.9dbeb016.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultGameState = {\n    players: [],\n    freeParkingBalance: 0,\n    open: true\n};\nexports.calculateGameState = (events, currentState) => {\n    return events.reduce((state, event) => {\n        switch (event.type) {\n            case \"playerJoin\":\n                return Object.assign(Object.assign({}, state), { players: [\n                        ...state.players,\n                        {\n                            playerId: event.playerId,\n                            name: event.name,\n                            banker: false,\n                            balance: 0\n                        }\n                    ] });\n            case \"playerDelete\":\n                return Object.assign(Object.assign({}, state), { players: state.players.filter((p) => p.playerId !== event.playerId) });\n            case \"playerNameChange\":\n                return Object.assign(Object.assign({}, state), { players: state.players.map((p) => p.playerId === event.playerId\n                        ? Object.assign(Object.assign({}, p), { name: event.name }) : p) });\n            case \"playerBankerStatusChange\":\n                return Object.assign(Object.assign({}, state), { players: state.players.map((p) => p.playerId === event.playerId\n                        ? Object.assign(Object.assign({}, p), { banker: event.isBanker }) : p) });\n            case \"transaction\":\n                if (event.from === \"bank\" || event.from === \"freeParking\") {\n                    const destinationPlayer = state.players.find((p) => p.playerId === event.to);\n                    if (destinationPlayer === undefined) {\n                        throw new Error(\"Unable to find destination player\");\n                    }\n                    return Object.assign(Object.assign({}, state), { players: [\n                            ...state.players.filter((p) => p.playerId !== event.from && p.playerId !== event.to),\n                            Object.assign(Object.assign({}, destinationPlayer), { balance: destinationPlayer.balance + event.amount })\n                        ], freeParkingBalance: event.from === \"freeParking\"\n                            ? state.freeParkingBalance - event.amount\n                            : state.freeParkingBalance });\n                }\n                else if (event.to === \"bank\" || event.to === \"freeParking\") {\n                    const sourcePlayer = state.players.find((p) => p.playerId === event.from);\n                    if (sourcePlayer === undefined) {\n                        throw new Error(\"Unable to find source player\");\n                    }\n                    return Object.assign(Object.assign({}, state), { players: [\n                            ...state.players.filter((p) => p.playerId !== event.from && p.playerId !== event.to),\n                            Object.assign(Object.assign({}, sourcePlayer), { balance: sourcePlayer.balance - event.amount })\n                        ], freeParkingBalance: event.to === \"freeParking\"\n                            ? state.freeParkingBalance + event.amount\n                            : state.freeParkingBalance });\n                }\n                else {\n                    const sourcePlayer = state.players.find((p) => p.playerId === event.from);\n                    const destinationPlayer = state.players.find((p) => p.playerId === event.to);\n                    if (sourcePlayer === undefined || destinationPlayer === undefined) {\n                        throw new Error(\"Unable to find source or destination player\");\n                    }\n                    return Object.assign(Object.assign({}, state), { players: [\n                            ...state.players.filter((p) => p.playerId !== event.from && p.playerId !== event.to),\n                            Object.assign(Object.assign({}, sourcePlayer), { balance: sourcePlayer.balance - event.amount }),\n                            Object.assign(Object.assign({}, destinationPlayer), { balance: destinationPlayer.balance + event.amount })\n                        ] });\n                }\n            case \"gameOpenStateChange\":\n                return Object.assign(Object.assign({}, state), { open: event.open });\n        }\n    }, currentState);\n};\n//# sourceMappingURL=state.js.map","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"rect\", {\n  fill: \"none\",\n  height: 24,\n  width: 24\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"rect\", {\n  height: 7,\n  width: 3,\n  x: 4,\n  y: 10\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  height: 7,\n  width: 3,\n  x: 10.5,\n  y: 10\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  height: 3,\n  width: 20,\n  x: 2,\n  y: 19\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  height: 7,\n  width: 3,\n  x: 17,\n  y: 10\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"12,1 2,6 2,8 22,8 22,6\"\n})));\n\nvar SvgBank = function SvgBank(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    enableBackground: \"new 0 0 24 24\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgBank, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/bank.1c746165.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11.8 10.9c-2.27-.59-3-1.2-3-2.15 0-1.09 1.01-1.85 2.7-1.85 1.78 0 2.44.85 2.5 2.1h2.21c-.07-1.72-1.12-3.3-3.21-3.81V3h-3v2.16c-1.94.42-3.5 1.68-3.5 3.61 0 2.31 1.91 3.46 4.7 4.13 2.5.6 3 1.48 3 2.41 0 .69-.49 1.79-2.7 1.79-2.06 0-2.87-.92-2.98-2.1h-2.2c.12 2.19 1.76 3.42 3.68 3.83V21h3v-2.15c1.95-.37 3.5-1.5 3.5-3.55 0-2.84-2.43-3.81-4.7-4.4z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n});\n\nvar SvgFunds = function SvgFunds(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgFunds, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/funds.ef509e7a.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n});\n\nvar SvgList = function SvgList(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgList, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/list.cc604769.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0,0h24v24H0V0z\",\n  fill: \"none\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"\n}));\n\nvar SvgSettings = function SvgSettings(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    enableBackground: \"new 0 0 24 24\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSettings, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/settings.40a78ad1.svg\";\nexport { ForwardRef as ReactComponent };","import { IPageMeta } from \"./components/MetaTags\";\n\nexport const siteUrl = \"https://monopoly-money.nitratine.net\";\n\nexport const routePaths = {\n  home: \"/\",\n  join: \"/join\",\n  newGame: \"/new-game\",\n  funds: \"/funds\",\n  bank: \"/bank\",\n  history: \"/history\",\n  settings: \"/settings\"\n};\n\nexport const pageMeta: Record<string, IPageMeta> = {\n  [routePaths.home]: {\n    titlePrefix: \"\",\n    description:\n      \"Monopoly Money helps you manage your finances in a game of monopoly from the browser.\",\n    index: true\n  },\n  [routePaths.join]: {\n    titlePrefix: \"Join Game\",\n    description: \"Join a Monopoly Money game\",\n    index: true\n  },\n  [routePaths.newGame]: {\n    titlePrefix: \"New Game\",\n    description: \"Create a new Monopoly Money game\",\n    index: true\n  },\n  [routePaths.funds]: {\n    titlePrefix: \"Manage Funds\",\n    index: false\n  },\n  [routePaths.bank]: {\n    titlePrefix: \"Bank\",\n    description: \"TODO\",\n    index: false\n  },\n  [routePaths.history]: {\n    titlePrefix: \"History\",\n    index: false\n  },\n  [routePaths.settings]: {\n    titlePrefix: \"Settings\",\n    index: false\n  }\n};\n","import React from \"react\";\nimport { navigate, usePath } from \"hookrouter\";\nimport { Container, Nav, Navbar, Button } from \"react-bootstrap\";\nimport BannerImage from \"../img/banner.png\";\nimport { ReactComponent as BankIcon } from \"../img/bank.svg\";\nimport { ReactComponent as FundsIcon } from \"../img/funds.svg\";\nimport { ReactComponent as ListIcon } from \"../img/list.svg\";\nimport { ReactComponent as SettingsIcon } from \"../img/settings.svg\";\nimport { routePaths } from \"../constants\";\nimport \"./Navigation.scss\";\n\ninterface INavigationProps {\n  inGame: boolean;\n  isBanker: boolean;\n}\n\ninterface INavbarLink {\n  active: boolean;\n  title: string;\n  icon: React.FunctionComponent<React.SVGProps<SVGSVGElement>>;\n  path: string;\n}\n\nconst Navigation: React.FC<INavigationProps> = ({ inGame, isBanker }) => {\n  const currentPath = usePath();\n\n  const navbarLinks: INavbarLink[] = [\n    {\n      path: routePaths.funds,\n      active: inGame,\n      title: \"Funds\",\n      icon: FundsIcon\n    },\n    {\n      path: routePaths.history,\n      active: inGame,\n      title: \"History\",\n      icon: ListIcon\n    },\n    {\n      path: routePaths.bank,\n      active: inGame && isBanker,\n      title: \"Bank\",\n      icon: BankIcon\n    },\n    {\n      path: routePaths.settings,\n      active: inGame && isBanker,\n      title: \"Settings\",\n      icon: SettingsIcon\n    }\n  ];\n\n  const goTo = (location: string) => () => navigate(location);\n\n  return (\n    <Navbar bg=\"light\" variant=\"light\" sticky=\"top\" className=\"navigation\">\n      <Container>\n        <Navbar.Brand onClick={goTo(\"/\")} className=\"mr-1\">\n          <img\n            src={BannerImage}\n            height=\"30\"\n            className=\"d-inline-block align-top\"\n            alt=\"Monopoly Money Banner Logo\"\n            style={{ cursor: \"pointer\" }}\n          />\n        </Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          {navbarLinks\n            .filter((link) => link.active)\n            .map((link) => {\n              const Icon = link.icon;\n              return (\n                <Nav.Link\n                  key={link.path}\n                  href=\"#\"\n                  onClick={goTo(link.path)}\n                  active={currentPath === link.path}\n                  className=\"p-0\"\n                >\n                  <Button variant=\"light\" title={link.title} className=\"d-flex ml-1 icon-button\">\n                    <Icon\n                      style={{\n                        height: 25,\n                        width: 25,\n                        fill: currentPath === link.path ? \"black\" : \"rgba(0,0,0,.65)\"\n                      }}\n                    />\n                    <span className=\"ml-1 d-none d-sm-inline\">{link.title}</span>\n                  </Button>\n                </Nav.Link>\n              );\n            })}\n        </Nav>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport useMetaTags from \"react-metatags-hook\";\nimport BannerImage from \"../img/banner.png\";\nimport { pageMeta, siteUrl } from \"../constants\";\n\nexport interface IPageMeta {\n  titlePrefix: string;\n  description?: string;\n  index: boolean;\n}\n\ninterface IProps extends React.PropsWithChildren<{}> {\n  route: string;\n}\n\nconst MetaTags: React.FC<IProps> = ({ route, children }) => {\n  const configPageMeta = pageMeta[route];\n  const title = `${configPageMeta.titlePrefix} Monopoly Money`;\n\n  useMetaTags({\n    title,\n    description: configPageMeta.description,\n    charset: \"utf-8\",\n    lang: \"en\",\n    metas: [\n      {\n        name: \"robots\",\n        content: configPageMeta.index ? \"index\" : \"noindex, nofollow\"\n      }\n    ],\n    links: [\n      { rel: \"canonical\", href: siteUrl + route },\n      { rel: \"icon\", type: \"image/ico\", href: \"/favicon.ico\" },\n      { rel: \"apple-touch-icon\", type: \"image/png\", href: \"/logo.png\" }\n    ],\n    openGraph: {\n      title,\n      image: siteUrl + BannerImage,\n      site_name: \"Monopoly Money\"\n    }\n  });\n\n  return <>{children}</>;\n};\n\nexport default MetaTags;\n","import React, { ReactNode } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\ninterface IPageSizeWrapperProps {\n  children: ReactNode;\n}\n\nconst PageSizeWrapper: React.FC<IPageSizeWrapperProps> = ({ children }) => {\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col className=\"col-md-10\">{children}</Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default PageSizeWrapper;\n","export default {\n  api: {\n    root: process.env.REACT_APP_API_ROOT ? process.env.REACT_APP_API_ROOT : window.location.origin\n  }\n};\n","import config from \"../config\";\nimport {\n  ICreateGameRequest,\n  IJoinGameRequest,\n  IJoinGameResponse\n} from \"@monopoly-money/server/build/api/dto\";\nimport { IGameState } from \"@monopoly-money/game-state\";\n\nexport const createGame = (name: string): Promise<IJoinGameResponse> => {\n  return fetch(`${config.api.root}/api/game`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({ name } as ICreateGameRequest)\n  }).then((r) => {\n    if (r.status === 200) {\n      return r.json() as Promise<IJoinGameResponse>;\n    } else {\n      throw new Error(`Server Error (HTTP${r.status})`);\n    }\n  });\n};\n\nexport const joinGame = async (\n  gameId: string,\n  name: string\n): Promise<IJoinGameResponse | \"DoesNotExist\" | \"NotOpen\"> => {\n  const response = await fetch(`${config.api.root}/api/game/${gameId}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({ name } as IJoinGameRequest)\n  });\n\n  if (response.status === 200) {\n    return response.json() as Promise<IJoinGameResponse>;\n  } else if (response.status === 404) {\n    return Promise.resolve(\"DoesNotExist\");\n  } else if (response.status === 403) {\n    return Promise.resolve(\"NotOpen\");\n  } else {\n    throw new Error(`Server Error (HTTP${response.status})`);\n  }\n};\n\nexport const getGameStatus = async (\n  gameId: string,\n  userToken: string,\n  abortController: AbortController | undefined\n): Promise<IGameState | \"DoesNotExist\"> => {\n  const response = await fetch(`${config.api.root}/api/game/${gameId}`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: userToken\n    },\n    signal: abortController?.signal\n  });\n  if (response.status === 200) {\n    return response.json() as Promise<IGameState>;\n  } else if (response.status === 404) {\n    return Promise.resolve(\"DoesNotExist\") as Promise<\"DoesNotExist\">;\n  } else {\n    throw new Error(`Server Error (HTTP${response.status})`);\n  }\n};\n","import { useState, useEffect } from \"react\";\nimport { DateTime } from \"luxon\";\nimport useLocalStorage from \"@rehooks/local-storage\";\nimport { getGameStatus } from \"../api\";\nimport { IGameState } from \"@monopoly-money/game-state\";\n\nconst storedGamesLocalStorageKey = \"storedGames\";\n\ninterface IStoredGameInLocalStorage {\n  gameId: string;\n  userToken: string;\n  playerId: string;\n  time: string;\n}\n\nexport interface IStoredGame extends IStoredGameInLocalStorage {\n  status: IGameState | null;\n}\n\nconst useStoredGames = (getStatuses: boolean = true) => {\n  const [abortController] = useState(() => new AbortController());\n  const [storedGames, setStoredGames] = useLocalStorage<IStoredGameInLocalStorage[]>(\n    storedGamesLocalStorageKey,\n    []\n  );\n  const [gameStatuses, setGameStatuses] = useState<Record<string, IGameState | null>>({});\n\n  const storeGame = (gameId: string, userToken: string, playerId: string) => {\n    setStoredGames([\n      ...(storedGames ?? []).filter((game) => game.gameId !== gameId), // Remove current instance\n      {\n        gameId,\n        userToken,\n        playerId,\n        time: DateTime.local().toISO()\n      }\n    ]);\n  };\n\n  // Identify if we need to fetch some new game data\n  useEffect(() => {\n    // If we don't want to fetch the statuses, exit early\n    if (!getStatuses) {\n      return;\n    }\n\n    const gamesWithoutStatuses = (storedGames ?? []).filter(\n      (game) => Object.keys(gameStatuses).indexOf(game.gameId) === -1\n    );\n\n    gamesWithoutStatuses.forEach(({ gameId, userToken }) => {\n      // Initially insert a null (to stop multiple requests)\n      setGameStatuses((current) => ({\n        ...current,\n        [gameId]: null\n      }));\n\n      // Make the request\n      getGameStatus(gameId, userToken, abortController)\n        .then((status) => {\n          if (status === \"DoesNotExist\") {\n            // Remove the game if it no longer exists\n            setStoredGames((storedGames ?? []).filter((g) => g.gameId !== gameId));\n            setGameStatuses((current) =>\n              Object.keys(current).reduce((acc, curr) => {\n                if (curr !== gameId) {\n                  return { ...acc, [gameId]: current[gameId] };\n                } else {\n                  return acc;\n                }\n              }, {} as Record<string, IGameState | null>)\n            );\n          } else {\n            // Add the status\n            setGameStatuses((current) => ({\n              ...current,\n              [gameId]: status\n            }));\n          }\n        })\n        .catch((error) => error?.name === \"DOMException\" && console.error(error)); // Ignore `DOMException: The user aborted a request.`\n    });\n  }, [storedGames, gameStatuses]);\n\n  // Abort all requests on unmount\n  useEffect(() => {\n    return () => {\n      abortController.abort();\n    };\n  }, []);\n\n  // Merge the games and statuses together\n  const storedGamesWithDetail: IStoredGame[] = (storedGames ?? []).map((game) => ({\n    ...game,\n    status: gameStatuses[game.gameId] ?? null\n  }));\n\n  return { storedGames: storedGamesWithDetail, storeGame };\n};\n\nexport default useStoredGames;\n","export const formatCurrency = (value: number) =>\n  \"$\" + value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n","import React from \"react\";\nimport bannerImage from \"../../img/banner.png\";\nimport { Button, Card, Badge } from \"react-bootstrap\";\nimport { navigate, useTitle } from \"hookrouter\";\nimport useStoredGames from \"../../hooks/useStoredGames\";\nimport \"./Home.scss\";\nimport { DateTime } from \"luxon\";\nimport { formatCurrency } from \"../../utils\";\n\ninterface IHomeProps {\n  onGameSetup: (gameId: string, userToken: string, playerId: string) => void;\n}\n\nconst Home: React.FC<IHomeProps> = ({ onGameSetup }) => {\n  useTitle(\"Monopoly Money\");\n  const { storedGames } = useStoredGames();\n\n  const newGame = () => navigate(\"/new-game\");\n  const joinGame = () => navigate(\"/join\");\n\n  return (\n    <div className=\"home text-center\">\n      <h1 className=\"sr-only\">Monopoly Money</h1>\n      <img src={bannerImage} className=\"banner\" alt=\"Monopoly Money Banner\" />\n\n      <p className=\"lead mt-2\">\n        An easy way to manage finances in your game of monopoly from the browser.\n      </p>\n\n      <div className=\"new-join-button-wrapper mt-4\">\n        <Button size=\"lg\" onClick={newGame}>\n          New Game\n        </Button>\n        <Button size=\"lg\" onClick={joinGame}>\n          Join Game\n        </Button>\n      </div>\n\n      <div className=\"mt-4\">\n        <h2>Your Active Games</h2>\n        {storedGames.length > 0 ? (\n          <div className=\"active-game-cards\">\n            {storedGames\n              .sort((a, b) => (a.time > b.time ? -1 : 1))\n              .map(({ gameId, userToken, playerId, status, time }) => (\n                <Card key={gameId} className=\"mb-1\">\n                  <Card.Body className=\"p-2\">\n                    <div className=\"text-left\">\n                      Game {gameId}\n                      <small style={{ float: \"right\" }}>\n                        {DateTime.fromISO(time).toFormat(\"DD h:mm a\")}\n                      </small>\n                    </div>\n                    <div>\n                      {status?.players\n                        .sort((p1, p2) => (p1.playerId === playerId ? -1 : 0))\n                        .map((player) => (\n                          <Badge\n                            key={player.playerId}\n                            variant={\n                              player.playerId === playerId\n                                ? \"dark\"\n                                : player.banker\n                                ? \"info\"\n                                : \"success\"\n                            }\n                            className=\"mr-1\"\n                          >\n                            {player.name}: {formatCurrency(player.balance)}\n                          </Badge>\n                        ))}\n                      {status !== null && (\n                        <Badge variant=\"warning\">\n                          Free Parking: {formatCurrency(status.freeParkingBalance)}\n                        </Badge>\n                      )}\n                    </div>\n                    <Button\n                      block\n                      size=\"sm\"\n                      variant=\"outline-primary\"\n                      onClick={() => onGameSetup(gameId, userToken, playerId)}\n                      className=\"mt-2\"\n                    >\n                      Join Game\n                    </Button>\n                  </Card.Body>\n                </Card>\n              ))}\n          </div>\n        ) : (\n          <div>You have no active games</div>\n        )}\n      </div>\n\n      <hr />\n\n      <div>\n        <h2>What is Monopoly Money?</h2>\n        <p>\n          Monopoly Money is a webapp that helps you keep track of your finances in a game of\n          Monopoly (or any game that uses currency).\n        </p>\n        <p>\n          Instead of using the cash that the game commonly comes with, you can play Monopoly like\n          you're playing the credit card edition, but with your phone - a much more faster way to\n          exchange money.\n        </p>\n\n        {/* TODO Screenshot of everyone's balances */}\n\n        {/* TODO Screenshot of history */}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { Button, Modal, InputGroup, FormControl, Form } from \"react-bootstrap\";\nimport { IGameStatePlayer, GameEntity } from \"@monopoly-money/game-state\";\nimport { formatCurrency } from \"../../utils\";\n\ninterface ISendMoneyModalProps {\n  balance: number;\n  playerId: string;\n  recipient: \"freeParking\" | IGameStatePlayer;\n  proposeTransaction: (from: GameEntity, to: GameEntity, amount: number) => void;\n  onClose: () => void;\n}\n\nconst SendMoneyModal: React.FC<ISendMoneyModalProps> = ({\n  balance,\n  playerId,\n  recipient,\n  proposeTransaction,\n  onClose\n}) => {\n  const [amount, setAmount] = useState(\"\");\n  const [submitError, setSubmitError] = useState<string | null>(null);\n\n  const submit = () => {\n    if (amount === \"\") {\n      setSubmitError(\"Please provide an amount\");\n    } else if (parseInt(amount, 10) > balance) {\n      setSubmitError(`You do not have enough money (${formatCurrency(balance)})`);\n    } else {\n      setSubmitError(null);\n      proposeTransaction(\n        playerId,\n        recipient === \"freeParking\" ? \"freeParking\" : recipient.playerId,\n        parseInt(amount, 10)\n      );\n      onClose();\n    }\n  };\n\n  const cancel = () => {\n    setSubmitError(null);\n    onClose();\n  };\n\n  const onAmountUpdate = (event: React.FormEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    const int = parseInt(value ?? \"\", 10);\n    setAmount(isNaN(int) ? \"\" : `${int}`);\n  };\n\n  return (\n    <Modal show={true} onHide={cancel} size=\"lg\" centered className=\"send-money-modal\">\n      <Modal.Header closeButton>\n        <Modal.Title>\n          Transfer Funds to {recipient === \"freeParking\" ? \"Free Parking\" : recipient.name}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text>Amount</InputGroup.Text>\n          </InputGroup.Prepend>\n          <div className=\"d-flex\">\n            <FormControl\n              type=\"number\"\n              value={amount}\n              onChange={onAmountUpdate}\n              className=\"remove-left-border-radius remove-right-border-radius with-dollar-sign-input-icon\"\n            />\n            <span className=\"dollar-sign-input-icon\">$</span>\n          </div>\n          <Button variant=\"success\" className=\"remove-left-border-radius\" onClick={submit}>\n            Send\n          </Button>\n        </InputGroup>\n        <Form.Text style={{ color: \"var(--danger)\" }}>{submitError}</Form.Text>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default SendMoneyModal;\n","import React, { useRef } from \"react\";\nimport { useClipboard } from \"use-clipboard-copy\";\nimport { Overlay, Tooltip } from \"react-bootstrap\";\n\ninterface IGameCodeProps {\n  gameId: string;\n  isBanker: boolean;\n}\n\nconst GameCode: React.FC<IGameCodeProps> = ({ gameId, isBanker }) => {\n  const clipboard = useClipboard({\n    copiedTimeout: 1000\n  });\n  const copyTooltipTarget = useRef<HTMLHeadingElement>();\n\n  const gameIdClicked = () => {\n    clipboard.copy(gameId);\n  };\n\n  return (\n    <div className=\"text-center\">\n      <h1 ref={copyTooltipTarget as any} onClick={gameIdClicked}>\n        {gameId}\n      </h1>\n      <Overlay target={copyTooltipTarget.current} show={clipboard.copied} placement=\"bottom\">\n        {(props) => (\n          <Tooltip id=\"overlay-example\" {...(props as any)}>\n            Copied to clipboard\n          </Tooltip>\n        )}\n      </Overlay>\n      {isBanker && (\n        <small className=\"text-muted\">You can hide this by closing the game in the settings.</small>\n      )}\n      <hr />\n    </div>\n  );\n};\n\nexport default GameCode;\n","import React, { useState, useEffect } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport \"./Funds.scss\";\nimport { IGameStatePlayer, GameEntity } from \"@monopoly-money/game-state\";\nimport SendMoneyModal from \"./SendMoneyModal\";\nimport { useModal } from \"react-modal-hook\";\nimport GameCode from \"./GameCode\";\nimport { formatCurrency } from \"../../utils\";\n\ninterface IFundsProps {\n  gameId: string;\n  playerId: string;\n  isGameOpen: boolean;\n  players: IGameStatePlayer[];\n  freeParkingBalance: number;\n  proposeTransaction: (from: GameEntity, to: GameEntity, amount: number) => void;\n}\n\nconst Funds: React.FC<IFundsProps> = ({\n  gameId,\n  playerId,\n  isGameOpen,\n  players,\n  freeParkingBalance,\n  proposeTransaction\n}) => {\n  const [recipient, setRecipient] = useState<IGameStatePlayer | \"freeParking\" | null>(null);\n  const [showSendMoneyModal, hideSendMoneyModal] = useModal(\n    () => (\n      <>\n        {recipient !== null && (\n          <SendMoneyModal\n            balance={me?.balance ?? 0}\n            playerId={playerId}\n            recipient={recipient}\n            proposeTransaction={proposeTransaction}\n            onClose={() => setRecipient(null)}\n          />\n        )}\n      </>\n    ),\n    [recipient]\n  );\n\n  // Show/hide the send money modal automatically\n  useEffect(() => {\n    if (recipient !== null) {\n      showSendMoneyModal();\n    } else {\n      hideSendMoneyModal();\n    }\n  }, [recipient, showSendMoneyModal, hideSendMoneyModal]);\n\n  const me = players.find((p) => p.playerId === playerId);\n  const isBanker = me?.banker ?? false;\n\n  return (\n    <div className=\"funds\">\n      {isGameOpen && <GameCode gameId={gameId} isBanker={isBanker} />}\n\n      <Card className=\"mb-1 text-center\">\n        {me !== undefined && (\n          <Card.Body className=\"p-3\">\n            {me.name}: {formatCurrency(me.balance)}\n          </Card.Body>\n        )}\n      </Card>\n\n      <div className=\"balance-grid\">\n        {players\n          .filter((p) => p.playerId !== playerId)\n          .sort((a, b) => (a.name > b.name ? 1 : b.name > a.name ? -1 : 0))\n          .map((player) => (\n            <Card key={player.name} className=\"text-center\">\n              <Card.Body className=\"p-3\">\n                <div>{player.name}</div>\n                <div>{formatCurrency(player.balance)}</div>\n                <Button\n                  size=\"sm\"\n                  variant=\"outline-dark\"\n                  className=\"mt-2\"\n                  onClick={() => setRecipient(player)}\n                >\n                  Send Money\n                </Button>\n              </Card.Body>\n            </Card>\n          ))}\n      </div>\n\n      <Card className=\"mt-1 text-center\">\n        <Card.Body className=\"p-3\">\n          <div>Free Parking: {formatCurrency(freeParkingBalance)}</div>\n          <Button\n            size=\"sm\"\n            variant=\"outline-dark\"\n            className=\"mt-2\"\n            onClick={() => setRecipient(\"freeParking\")}\n          >\n            Send Money\n          </Button>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default Funds;\n","import React, { useState } from \"react\";\nimport { InputGroup, Button, FormControl, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport { IGameStatePlayer } from \"@monopoly-money/game-state\";\n\ninterface IValuePlayerFormProps {\n  label: string;\n  submitText: string;\n  players: IGameStatePlayer[];\n  onSubmit: (value: number, playerId: string) => void;\n}\n\nconst ValuePlayerForm: React.FC<IValuePlayerFormProps> = ({\n  label,\n  submitText,\n  players,\n  onSubmit\n}) => {\n  const identifier = label.toLowerCase().replace(\" \", \"-\");\n  const [amount, setAmount] = useState(\"\");\n  const [selectedPlayer, setSelectedPlayer] = useState<IGameStatePlayer | null>(null);\n\n  const valid = amount !== \"\" && selectedPlayer !== null;\n\n  const onAmountUpdate = (event: React.FormEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    const int = parseInt(value ?? \"\", 10);\n    setAmount(isNaN(int) ? \"\" : `${int}`);\n  };\n\n  const submit = () => {\n    if (selectedPlayer !== null) {\n      onSubmit(parseInt(amount, 10), selectedPlayer.playerId);\n      setAmount(\"\");\n      setSelectedPlayer(null);\n    }\n  };\n\n  return (\n    <>\n      <label htmlFor={`${identifier}-value`}>{label}</label>\n      <InputGroup>\n        <FormControl\n          type=\"number\"\n          id={`${identifier}-value`}\n          value={amount}\n          onChange={onAmountUpdate}\n          className=\"with-dollar-sign-input-icon\"\n        />\n        <span className=\"dollar-sign-input-icon\">$</span>\n\n        <DropdownButton\n          variant=\"outline-secondary\"\n          id={`${identifier}-player`}\n          className=\"mid-dropdown\"\n          title={selectedPlayer?.name ?? \"Select Player\"}\n        >\n          {players.map((player) => (\n            <Dropdown.Item key={player.playerId} onClick={() => setSelectedPlayer(player)}>\n              {player.name}\n            </Dropdown.Item>\n          ))}\n        </DropdownButton>\n\n        <InputGroup.Append>\n          <Button variant=\"outline-secondary\" onClick={submit} disabled={!valid}>\n            {submitText}\n          </Button>\n        </InputGroup.Append>\n      </InputGroup>\n    </>\n  );\n};\n\nexport default ValuePlayerForm;\n","import React, { useState } from \"react\";\nimport { InputGroup, Button, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport { IGameStatePlayer } from \"@monopoly-money/game-state\";\nimport { formatCurrency } from \"../../utils\";\n\ninterface IGiveFreeParkingProps {\n  players: IGameStatePlayer[];\n  freeParkingBalance: number;\n  onSubmit: (playerId: string) => void;\n}\n\nconst GiveFreeParking: React.FC<IGiveFreeParkingProps> = ({\n  players,\n  freeParkingBalance,\n  onSubmit\n}) => {\n  const [selectedPlayer, setSelectedPlayer] = useState<IGameStatePlayer | null>(null);\n\n  const valid = selectedPlayer !== null;\n\n  const submit = () => {\n    if (selectedPlayer !== null) {\n      onSubmit(selectedPlayer.playerId);\n      setSelectedPlayer(null);\n    }\n  };\n\n  return (\n    <>\n      <label htmlFor={`free-parking-player`}>\n        Give Free Parking ({formatCurrency(freeParkingBalance)})\n      </label>\n      <InputGroup>\n        <DropdownButton\n          as={InputGroup.Prepend}\n          variant=\"outline-secondary\"\n          id={`free-parking-player`}\n          title={selectedPlayer?.name ?? \"Select Player\"}\n        >\n          {players.map((player) => (\n            <Dropdown.Item key={player.playerId} onClick={() => setSelectedPlayer(player)}>\n              {player.name}\n            </Dropdown.Item>\n          ))}\n        </DropdownButton>\n\n        <InputGroup.Append>\n          <Button variant=\"outline-secondary\" onClick={submit} disabled={!valid}>\n            Give\n          </Button>\n        </InputGroup.Append>\n      </InputGroup>\n    </>\n  );\n};\n\nexport default GiveFreeParking;\n","import React, { useState } from \"react\";\nimport { InputGroup, Button, Modal, FormControl, Form } from \"react-bootstrap\";\nimport { IGameStatePlayer, GameEntity } from \"@monopoly-money/game-state\";\nimport { useModal } from \"react-modal-hook\";\n\ninterface IInitialiseGameProps {\n  players: IGameStatePlayer[];\n  proposeTransaction: (from: GameEntity, to: GameEntity, amount: number) => void;\n}\n\nconst InitialiseGame: React.FC<IInitialiseGameProps> = ({ players, proposeTransaction }) => {\n  const [showModal, hideModal] = useModal(() => (\n    <ValueModal\n      submitAmount={(amount: number) => {\n        players.forEach((p) => {\n          proposeTransaction(\"bank\", p.playerId, amount);\n        });\n      }}\n      onClose={hideModal}\n    />\n  ));\n\n  return (\n    <Button variant=\"primary\" block onClick={showModal}>\n      Initialise Player Balances\n    </Button>\n  );\n};\n\ninterface IValueModalProps {\n  submitAmount: (amount: number) => void;\n  onClose: () => void;\n}\n\nconst ValueModal: React.FC<IValueModalProps> = ({ submitAmount, onClose }) => {\n  const [amount, setAmount] = useState(\"\");\n  const [submitError, setSubmitError] = useState<string | null>(null);\n\n  const submit = () => {\n    if (amount === \"\") {\n      setSubmitError(\"Please provide an amount\");\n    } else {\n      setSubmitError(null);\n      submitAmount(parseInt(amount, 10));\n    }\n  };\n\n  const cancel = () => {\n    setSubmitError(null);\n    onClose();\n  };\n\n  const onAmountUpdate = (event: React.FormEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    const int = parseInt(value ?? \"\", 10);\n    setAmount(isNaN(int) ? \"\" : `${int}`);\n  };\n\n  return (\n    <Modal show={true} onHide={cancel} size=\"lg\" centered className=\"send-money-modal\">\n      <Modal.Header closeButton>\n        <Modal.Title>Initialise Amount</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>\n          Once you give a player money or initialise balances, you can not initialise balances\n          again.\n        </p>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text>Amount</InputGroup.Text>\n          </InputGroup.Prepend>\n          <div className=\"d-flex\">\n            <FormControl\n              type=\"number\"\n              value={amount}\n              onChange={onAmountUpdate}\n              className=\"remove-left-border-radius remove-right-border-radius with-dollar-sign-input-icon\"\n            />\n            <span className=\"dollar-sign-input-icon\">$</span>\n          </div>\n          <Button variant=\"success\" className=\"remove-left-border-radius\" onClick={submit}>\n            Send\n          </Button>\n        </InputGroup>\n        <Form.Text style={{ color: \"var(--danger)\" }}>{submitError}</Form.Text>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default InitialiseGame;\n","import React from \"react\";\nimport ValuePlayerForm from \"./ValuePlayerForm\";\nimport { IGameStatePlayer, GameEntity } from \"@monopoly-money/game-state\";\nimport \"./Bank.scss\";\nimport GiveFreeParking from \"./GiveFreeParking\";\nimport InitialiseGame from \"./InitialiseGame\";\n\ninterface IBankProps {\n  players: IGameStatePlayer[];\n  freeParkingBalance: number;\n  hasATransactionBeenMade: boolean;\n  proposeTransaction: (from: GameEntity, to: GameEntity, amount: number) => void;\n}\n\nconst Bank: React.FC<IBankProps> = ({\n  players,\n  freeParkingBalance,\n  hasATransactionBeenMade,\n  proposeTransaction\n}) => {\n  return (\n    <div className=\"bank\">\n      {!hasATransactionBeenMade && (\n        <div className=\"mb-3\">\n          <InitialiseGame players={players} proposeTransaction={proposeTransaction} />\n        </div>\n      )}\n\n      <div className=\"mb-3\">\n        <ValuePlayerForm\n          label=\"Give Money To Player\"\n          submitText=\"Send\"\n          players={players}\n          onSubmit={(value: number, playerId: string) =>\n            proposeTransaction(\"bank\", playerId, value)\n          }\n        />\n      </div>\n\n      <div className=\"mb-3\">\n        <ValuePlayerForm\n          label=\"Take Money From Player\"\n          submitText=\"Take\"\n          players={players}\n          onSubmit={(value: number, playerId: string) =>\n            proposeTransaction(\"bank\", playerId, -value)\n          }\n        />\n      </div>\n\n      <div className=\"mb-3\">\n        <GiveFreeParking\n          players={players}\n          freeParkingBalance={freeParkingBalance}\n          onSubmit={(playerId: string) =>\n            proposeTransaction(\"freeParking\", playerId, freeParkingBalance)\n          }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Bank;\n","import React from \"react\";\nimport {\n  GameEvent,\n  calculateGameState,\n  defaultGameState,\n  IGameState\n} from \"@monopoly-money/game-state\";\nimport \"./History.scss\";\nimport { formatCurrency } from \"../../utils\";\n\ninterface IHistoryProps {\n  events: GameEvent[];\n}\n\nconst History: React.FC<IHistoryProps> = ({ events }) => {\n  let currentGameState = defaultGameState;\n  const details = events.map((event) => {\n    const nextState = calculateGameState([event], currentGameState);\n    const currentEventDetails = getEventDetails(event, currentGameState, nextState);\n    currentGameState = nextState;\n    return currentEventDetails;\n  });\n\n  return (\n    <div className=\"history\">\n      {details.reverse().map((eventDetail) => (\n        <div key={eventDetail.id} className=\"event mb-2\">\n          <div className=\"bar\" style={{ background: `var(--${eventDetail.colour})` }} />\n          <div className=\"event-details\">\n            <div className=\"title\">\n              <small>{eventDetail.title}</small>\n            </div>\n            <div className=\"detail\">{eventDetail.detail}</div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst getEventDetails = (\n  event: GameEvent,\n  previousState: IGameState,\n  nextState: IGameState\n): {\n  id: string;\n  title: string;\n  detail: string;\n  colour: \"blue\" | \"red\" | \"orange\" | \"yellow\" | \"green\" | \"cyan\"; // https://getbootstrap.com/docs/4.0/getting-started/theming/#all-colors\n} => {\n  switch (event.type) {\n    case \"playerJoin\": {\n      const player = nextState.players.find((p) => p.playerId === event.playerId)!;\n      return {\n        id: `${event.type + event.time}`,\n        title: \"Player Join\",\n        detail: `${player.name} joined`,\n        colour: \"cyan\"\n      };\n    }\n\n    case \"playerBankerStatusChange\": {\n      const player = nextState.players.find((p) => p.playerId === event.playerId)!;\n      return {\n        id: `${event.type + event.time}`,\n        title: \"Player Banker Status Change\",\n        detail: `${player.name} was made a banker`,\n        colour: \"yellow\"\n      };\n    }\n\n    case \"transaction\": {\n      const playerReceiving =\n        event.to === \"bank\"\n          ? \"Bank\"\n          : event.to === \"freeParking\"\n          ? \"Free Parking\"\n          : nextState.players.find((p) => p.playerId === event.to)!.name;\n      const playerGiving =\n        event.from === \"bank\"\n          ? \"Bank\"\n          : event.from === \"freeParking\"\n          ? \"Free Parking\"\n          : nextState.players.find((p) => p.playerId === event.from)!.name;\n      return {\n        id: `${event.type + event.time}`,\n        title: \"Transaction\",\n        detail: `${playerGiving} → ${playerReceiving} (${formatCurrency(event.amount)})`,\n        colour: \"green\"\n      };\n    }\n\n    case \"playerNameChange\": {\n      const playerNameBeforeRename = previousState.players.find(\n        (p) => p.playerId === event.playerId\n      )!.name;\n      const playerNameAfterRename = nextState.players.find((p) => p.playerId === event.playerId)!\n        .name;\n      return {\n        id: `${event.type + event.time}`,\n        title: \"Player Name Change\",\n        detail: `${playerNameBeforeRename} was renamed to ${playerNameAfterRename}`,\n        colour: \"orange\"\n      };\n    }\n\n    case \"playerDelete\": {\n      const playerName = previousState.players.find((p) => p.playerId === event.playerId)!.name;\n      return {\n        id: `${event.type + event.time}`,\n        title: \"Player Removal\",\n        detail: `${playerName} was removed from the game`,\n        colour: \"red\"\n      };\n    }\n\n    case \"gameOpenStateChange\": {\n      return {\n        id: `${event.type + event.time}`,\n        title: \"Game Open State Change\",\n        detail: `The game is now ${event.open ? \"open\" : \"closed\"} to new players`,\n        colour: \"blue\"\n      };\n    }\n  }\n};\n\nexport default History;\n","import React, { useState } from \"react\";\nimport { Button, Modal, InputGroup, FormControl, Form } from \"react-bootstrap\";\nimport { IGameStatePlayer } from \"@monopoly-money/game-state\";\n\ninterface IRenamePlayerModalProps {\n  player: IGameStatePlayer;\n  proposePlayerNameChange: (playerId: string, name: string) => void;\n  onClose: () => void;\n}\n\nconst RenamePlayerModal: React.FC<IRenamePlayerModalProps> = ({\n  player,\n  proposePlayerNameChange,\n  onClose\n}) => {\n  const [name, setName] = useState(player.name);\n  const [submitError, setSubmitError] = useState<string | null>(null);\n\n  const submit = () => {\n    if (name === \"\") {\n      setSubmitError(\"Name must not be empty\");\n    } else {\n      setSubmitError(null);\n    }\n    proposePlayerNameChange(player.playerId, name);\n    onClose();\n  };\n\n  return (\n    <Modal show={true} onHide={onClose} size=\"lg\" centered>\n      <Modal.Header closeButton>\n        <Modal.Title>Change Player Name</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text>Name</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            value={name}\n            onChange={(e: React.FormEvent<HTMLInputElement>) => setName(e.currentTarget.value)}\n          />\n          <Button variant=\"success\" onClick={submit} className=\"remove-left-border-radius\">\n            Rename\n          </Button>\n        </InputGroup>\n        <Form.Text style={{ color: \"var(--danger)\" }}>{submitError}</Form.Text>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default RenamePlayerModal;\n","import React from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport { IGameStatePlayer } from \"@monopoly-money/game-state\";\n\ninterface IDeletePlayerModalProps {\n  player: IGameStatePlayer;\n  proposePlayerDelete: (playerId: string) => void;\n  onClose: () => void;\n}\n\nconst DeletePlayerModal: React.FC<IDeletePlayerModalProps> = ({\n  player,\n  proposePlayerDelete,\n  onClose\n}) => {\n  return (\n    <Modal show={true} onHide={onClose} size=\"lg\" centered>\n      <Modal.Header closeButton>\n        <Modal.Title>Remove Player</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>Are you sure you want to remove {player.name}?</p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"danger\" onClick={onClose}>\n          Cancel\n        </Button>\n        <Button\n          variant=\"success\"\n          className=\" ml-1\"\n          onClick={() => {\n            proposePlayerDelete(player.playerId);\n            onClose();\n          }}\n        >\n          Remove\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default DeletePlayerModal;\n","import React from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\n\ninterface IEndGameConfirmDialogProps {\n  proposeGameEnd: () => void;\n  onClose: () => void;\n}\n\nconst EndGameConfirmDialog: React.FC<IEndGameConfirmDialogProps> = ({\n  proposeGameEnd,\n  onClose\n}) => {\n  return (\n    <Modal show={true} onHide={onClose} size=\"lg\" centered>\n      <Modal.Header closeButton>\n        <Modal.Title>End Game</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>Are you sure you want to end the game?</p>\n        <p>This will kick everyone and you will not be able to re-join the game.</p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"danger\" onClick={onClose}>\n          Cancel\n        </Button>\n        <Button\n          variant=\"success\"\n          className=\" ml-1\"\n          onClick={() => {\n            proposeGameEnd();\n            onClose();\n          }}\n        >\n          End Game\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default EndGameConfirmDialog;\n","import React, { useState } from \"react\";\nimport { Button, Table } from \"react-bootstrap\";\nimport { IGameStatePlayer } from \"@monopoly-money/game-state\";\nimport { useModal } from \"react-modal-hook\";\nimport RenamePlayerModal from \"./RenamePlayerModal\";\nimport DeletePlayerModal from \"./DeletePlayerModal\";\nimport EndGameConfirmDialog from \"./EndGameConfirmDialog\";\nimport { formatCurrency } from \"../../utils\";\n\ninterface ISettingsProps {\n  isGameOpen: boolean;\n  players: IGameStatePlayer[];\n  proposePlayerNameChange: (playerId: string, name: string) => void;\n  proposePlayerDelete: (playerId: string) => void;\n  proposeGameOpenStateChange: (open: boolean) => void;\n  proposeGameEnd: () => void;\n}\n\nconst Settings: React.FC<ISettingsProps> = ({\n  isGameOpen,\n  players,\n  proposePlayerNameChange,\n  proposePlayerDelete,\n  proposeGameOpenStateChange,\n  proposeGameEnd\n}) => {\n  const [actioningPlayer, setActioningPlayer] = useState<IGameStatePlayer | null>(null);\n  const [showNameChangeModal, hideNameChangeModal] = useModal(\n    () => (\n      <>\n        {actioningPlayer !== null && (\n          <RenamePlayerModal\n            player={actioningPlayer}\n            proposePlayerNameChange={proposePlayerNameChange}\n            onClose={hideNameChangeModal}\n          />\n        )}\n      </>\n    ),\n    [actioningPlayer]\n  );\n  const [showDeletePlayerModal, hideDeletePlayerModal] = useModal(\n    () => (\n      <>\n        {actioningPlayer !== null && (\n          <DeletePlayerModal\n            player={actioningPlayer}\n            proposePlayerDelete={proposePlayerDelete}\n            onClose={hideDeletePlayerModal}\n          />\n        )}\n      </>\n    ),\n    [actioningPlayer]\n  );\n  const [showEndGameConfirmModal, hideEndGameConfirmModal] = useModal(\n    () => (\n      <>\n        <EndGameConfirmDialog proposeGameEnd={proposeGameEnd} onClose={hideEndGameConfirmModal} />\n      </>\n    ),\n    [actioningPlayer]\n  );\n\n  return (\n    <div>\n      <Table striped bordered hover size=\"sm\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Balance</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {players.map((player) => (\n            <tr key={player.playerId}>\n              <td>{player.name}</td>\n              <td>{formatCurrency(player.balance)}</td>\n              <td>\n                <Button\n                  variant=\"outline-secondary\"\n                  size=\"sm\"\n                  title=\"Rename\"\n                  onClick={() => {\n                    setActioningPlayer(player);\n                    showNameChangeModal();\n                  }}\n                >\n                  <span role=\"img\" aria-label=\"Rename\">\n                    ✏️\n                  </span>\n                </Button>\n                <Button\n                  variant=\"outline-danger\"\n                  size=\"sm\"\n                  title=\"Remove\"\n                  className=\"ml-1\"\n                  onClick={() => {\n                    setActioningPlayer(player);\n                    showDeletePlayerModal();\n                  }}\n                >\n                  <span role=\"img\" aria-label=\"Remove\">\n                    🗑️\n                  </span>\n                </Button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n\n      <Button block variant=\"primary\" onClick={() => proposeGameOpenStateChange(!isGameOpen)}>\n        {isGameOpen ? \"Close\" : \"Open\"} Game To New Players\n      </Button>\n\n      <Button block variant=\"danger\" onClick={() => showEndGameConfirmModal()}>\n        End Game\n      </Button>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React, { useState } from \"react\";\nimport { useTitle } from \"hookrouter\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { createGame, joinGame } from \"../../api\";\nimport useStoredGames from \"../../hooks/useStoredGames\";\n\ninterface IJoinProps {\n  newGame: boolean;\n  onGameSetup: (gameId: string, userToken: string, playerId: string) => void;\n}\n\nconst Join: React.FC<IJoinProps> = ({ newGame, onGameSetup }) => {\n  const title = newGame ? \"Create Game\" : \"Join Game\";\n  useTitle(`${title} - Monopoly Money`);\n\n  const { storedGames } = useStoredGames(false);\n  const [loading, setLoading] = useState(false);\n  const [gameId, setGameId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [gameError, setGameError] = useState<string | null>(null);\n  const [nameError, setNameError] = useState<string | null>(null);\n\n  // If the game is already stored, join with what we have\n  const isAStoredGame = storedGames.map((g) => g.gameId).indexOf(gameId) !== -1;\n\n  const onGameIdChange = (event: React.FormEvent<HTMLInputElement>) => {\n    setGameId(event.currentTarget.value ?? \"\");\n  };\n\n  const onNameChange = (event: React.FormEvent<HTMLInputElement>) => {\n    setName(event.currentTarget.value);\n  };\n\n  const onSubmit = () => {\n    if (isAStoredGame) {\n      const storedGame = storedGames.find((g) => g.gameId === gameId)!;\n      onGameSetup(storedGame.gameId, storedGame.userToken, storedGame.playerId);\n    } else if (newGame) {\n      // Validity check\n      if (name === \"\") {\n        setNameError(\"Please provide your name\");\n        return;\n      }\n      setNameError(null);\n\n      // Create game\n      setLoading(true);\n      createGame(name)\n        .then((result) => {\n          onGameSetup(result.gameId, result.userToken, result.playerId);\n        })\n        .catch((error) => console.log(error))\n        .finally(() => setLoading(false));\n    } else {\n      // Validity check\n      if (gameId === \"\") {\n        setGameError(\"Please provide the game Id\");\n        return;\n      }\n      setGameError(null);\n      if (name === \"\") {\n        setNameError(\"Please provide your name\");\n        return;\n      }\n      setNameError(null);\n\n      // Join game\n      setLoading(true);\n      joinGame(gameId, name)\n        .then((result) => {\n          if (result === \"DoesNotExist\") {\n            setGameError(\"That game does not exist\");\n          } else if (result === \"NotOpen\") {\n            setGameError(\"That game is not open. Ask the banker to open the game.\");\n          } else {\n            onGameSetup(result.gameId, result.userToken, result.playerId);\n          }\n        })\n        .catch((error) => console.log(error))\n        .finally(() => setLoading(false));\n    }\n  };\n\n  return (\n    <div className=\"text-center\">\n      <h1>{title}</h1>\n\n      {!newGame && (\n        <Form.Group>\n          <Form.Label>Game Id</Form.Label>\n          <Form.Control\n            placeholder=\"123456\"\n            value={gameId}\n            className=\"text-center\"\n            onChange={onGameIdChange}\n          />\n          <Form.Text style={{ color: \"var(--danger)\" }}>{gameError}</Form.Text>\n        </Form.Group>\n      )}\n\n      {isAStoredGame ? (\n        <p>\n          <em>You're already in this game - name is not required.</em>\n        </p>\n      ) : (\n        <Form.Group>\n          <Form.Label>Your Name</Form.Label>\n          <Form.Control\n            placeholder=\"Name\"\n            value={name}\n            className=\"text-center\"\n            onChange={onNameChange}\n            onKeyDown={(event: React.KeyboardEvent<HTMLInputElement>) =>\n              event.key === \"Enter\" && onSubmit()\n            }\n          />\n          <Form.Text style={{ color: \"var(--danger)\" }}>{nameError}</Form.Text>\n        </Form.Group>\n      )}\n\n      <Button block variant=\"primary\" onClick={onSubmit} disabled={loading}>\n        {newGame ? \"Create\" : \"Join\"}\n      </Button>\n    </div>\n  );\n};\n\nexport default Join;\n","import {\n  GameEvent,\n  IGameState,\n  defaultGameState,\n  calculateGameState,\n  GameEntity,\n  ITransactionEvent,\n  IPlayerNameChangeEvent,\n  IPlayerDeleteEvent,\n  IGameOpenStateChangeEvent\n} from \"@monopoly-money/game-state\";\nimport config from \"../config\";\nimport {\n  IAuthMessage,\n  OutgoingMessage,\n  IProposeEventMessage,\n  IProposeEndGameMessage\n} from \"@monopoly-money/server/build/api/dto\";\n\nexport interface IGameHandlerState {\n  events: GameEvent[];\n  isBanker: boolean;\n}\n\nclass GameHandler {\n  public gameId: string;\n  public userToken: string;\n  public playerId: string;\n  private onGameStateChange: (gameEnded: boolean) => void;\n  private onDisplayMessage: (message: string) => void;\n  private events: GameEvent[] = [];\n  private webSocket: WebSocket;\n  private gameState: IGameState = defaultGameState;\n\n  constructor(\n    gameId: string,\n    userToken: string,\n    playerId: string,\n    onGameStateChange: (gameEnded: boolean) => void,\n    onDisplayMessage: (message: string) => void\n  ) {\n    this.gameId = gameId;\n    this.userToken = userToken;\n    this.playerId = playerId;\n    this.onGameStateChange = onGameStateChange;\n    this.onDisplayMessage = onDisplayMessage;\n\n    // Create websocket and assign onmessage\n    const webSocketAPIRoot = config.api.root.replace(/http?/g, \"ws\"); // I couldn't be bothered just making another config value\n    this.webSocket = new WebSocket(`${webSocketAPIRoot}/api/events`);\n\n    // Setup on message\n    this.webSocket.onmessage = this.onWebSocketMessage.bind(this);\n\n    // Send auth message on websocket open\n    this.webSocket.addEventListener(\"open\", (event) => {\n      const message: IAuthMessage = {\n        type: \"auth\",\n        gameId: this.gameId,\n        userToken: this.userToken\n      };\n      this.webSocket.send(JSON.stringify(message));\n    });\n\n    // Handle websocket close\n    this.webSocket.addEventListener(\"close\", (event) => {\n      if (!event.wasClean) {\n        this.gameEnd(\"unexpectedWebSocketClosure\");\n        this.onGameStateChange(true);\n      }\n    });\n  }\n\n  // Get data to be used to display the UI\n  public getState(): IGameState {\n    return this.gameState;\n  }\n\n  // Get all events\n  public getEvents(): GameEvent[] {\n    return this.events;\n  }\n\n  // Identify whether this user is a banker\n  public amIABanker(): boolean {\n    const me = this.gameState.players.find((p) => p.playerId === this.playerId);\n    return me?.banker ?? false;\n  }\n\n  // Propose a transaction\n  public proposeTransaction(from: GameEntity, to: GameEntity, amount: number) {\n    const event: ITransactionEvent = {\n      time: \"\", // Will be filled in by the server\n      actionedBy: \"\", // Will be filled in by the server\n      type: \"transaction\",\n      from,\n      to,\n      amount\n    };\n    this.submitEvent(event);\n  }\n\n  // Rename a player\n  public proposePlayerNameChange(playerId: string, name: string) {\n    const event: IPlayerNameChangeEvent = {\n      time: \"\", // Will be filled in by the server\n      actionedBy: \"\", // Will be filled in by the server\n      type: \"playerNameChange\",\n      playerId,\n      name\n    };\n    this.submitEvent(event);\n  }\n\n  // Remove a player\n  public proposePlayerDelete(playerId: string) {\n    const event: IPlayerDeleteEvent = {\n      time: \"\", // Will be filled in by the server\n      actionedBy: \"\", // Will be filled in by the server\n      type: \"playerDelete\",\n      playerId\n    };\n    this.submitEvent(event);\n  }\n\n  // Open / close game\n  public proposeGameOpenStateChange(open: boolean) {\n    const event: IGameOpenStateChangeEvent = {\n      time: \"\", // Will be filled in by the server\n      actionedBy: \"\", // Will be filled in by the server\n      type: \"gameOpenStateChange\",\n      open\n    };\n    this.submitEvent(event);\n  }\n\n  // Propose the game to end\n  public proposeGameEnd() {\n    const message: IProposeEndGameMessage = {\n      type: \"proposeEndGame\"\n    };\n    this.webSocket.send(JSON.stringify(message));\n  }\n\n  // When the game ends or player was kicked\n  public gameEnd = (reason: \"end\" | \"removed\" | \"unexpectedWebSocketClosure\" | null) => {\n    this.webSocket.close();\n    switch (reason) {\n      case \"end\":\n        this.onDisplayMessage(\"The game has been ended by the banker\");\n        break;\n      case \"removed\":\n        this.onDisplayMessage(\"You have been removed from the game\");\n        break;\n      case \"unexpectedWebSocketClosure\":\n        this.onDisplayMessage(\"Unexpectedly disconnection from the server\");\n        break;\n    }\n  };\n\n  // On messages from the server\n  private onWebSocketMessage(event: MessageEvent) {\n    const incomingMessage = JSON.parse(event.data) as OutgoingMessage;\n\n    if (incomingMessage.type === \"initialEventArray\") {\n      this.events = incomingMessage.events;\n      this.gameState = calculateGameState(this.events, this.gameState);\n    } else if (incomingMessage.type === \"newEvent\") {\n      this.events.push(incomingMessage.event);\n      this.gameState = calculateGameState([incomingMessage.event], this.gameState);\n    } else if (incomingMessage.type === \"gameEnd\") {\n      this.gameEnd(\"end\");\n    }\n\n    // Check if this player has been kicked\n    const inPlayers = this.gameState.players.map((p) => p.playerId).indexOf(this.playerId) !== -1;\n    if (!inPlayers) {\n      this.gameEnd(\"removed\");\n    }\n\n    // Notify the user of this class that a change has been made internally.\n    const gameEnded = incomingMessage.type === \"gameEnd\" || !inPlayers;\n    this.onGameStateChange(gameEnded);\n  }\n\n  // Messages to the server\n  private submitEvent(event: GameEvent) {\n    const message: IProposeEventMessage = {\n      type: \"proposeEvent\",\n      event\n    };\n    this.webSocket.send(JSON.stringify(message));\n  }\n}\n\nexport default GameHandler;\n","import { useState, useEffect, useCallback } from \"react\";\nimport cogoToast from \"cogo-toast\";\nimport GameHandler from \"../logic/GameHandler\";\nimport { GameEvent, IGameState, GameEntity } from \"@monopoly-money/game-state\";\n\nexport interface IGameHandlerAuthInfo {\n  gameId: string;\n  userToken: string;\n  playerId: string;\n}\n\nexport interface IGameHandlerState extends IGameState {\n  gameId: string;\n  playerId: string;\n  isBanker: boolean;\n  events: GameEvent[];\n  actions: {\n    proposeTransaction: (from: GameEntity, to: GameEntity, amount: number) => void;\n    proposePlayerNameChange: (playerId: string, name: string) => void;\n    proposePlayerDelete: (playerId: string) => void;\n    proposeGameOpenStateChange: (open: boolean) => void;\n    proposeGameEnd: () => void;\n  };\n}\n\nconst onDisplayMessage = (message: string) => {\n  const { hide } = cogoToast.info(message, {\n    position: \"bottom-center\",\n    hideAfter: 10,\n    onClick: () => hide && hide()\n  });\n};\n\nconst useGameHandler = (): {\n  game: IGameHandlerState | null;\n  authInfo: IGameHandlerAuthInfo | null;\n  initialize: (auth: IGameHandlerAuthInfo) => void;\n  clear: () => void;\n} => {\n  const [gameHandler, setGameHandler] = useState<GameHandler | null>(null);\n\n  // Used to trigger updates from the GameHandler\n  const [, updateState] = useState();\n  const forceUpdate = useCallback(() => updateState({}), []);\n\n  // Create / destroy the game handler when new new auth is provided\n  const initialize = ({ gameId, userToken, playerId }: IGameHandlerAuthInfo) => {\n    // If auth has been provided, setup the game handler\n    const onGameStateChange = (gameEnded: boolean) => {\n      if (gameEnded) {\n        setGameHandler(null);\n      } else {\n        forceUpdate();\n      }\n    };\n    setGameHandler(\n      new GameHandler(gameId, userToken, playerId, onGameStateChange, onDisplayMessage)\n    );\n  };\n\n  // Clear the current game\n  const clear = () => {\n    if (gameHandler !== null) {\n      gameHandler.gameEnd(null);\n    }\n    setGameHandler(null);\n  };\n\n  return {\n    initialize,\n    clear,\n    authInfo:\n      gameHandler === null\n        ? null\n        : {\n            gameId: gameHandler.gameId,\n            userToken: gameHandler.userToken,\n            playerId: gameHandler.playerId\n          },\n    game:\n      gameHandler === null\n        ? null\n        : {\n            ...gameHandler.getState(),\n            gameId: gameHandler.gameId,\n            playerId: gameHandler.playerId,\n            isBanker: gameHandler.amIABanker(),\n            events: gameHandler.getEvents(),\n            actions: {\n              proposeTransaction: gameHandler.proposeTransaction.bind(gameHandler),\n              proposePlayerNameChange: gameHandler.proposePlayerNameChange.bind(gameHandler),\n              proposePlayerDelete: gameHandler.proposePlayerDelete.bind(gameHandler),\n              proposeGameOpenStateChange: gameHandler.proposeGameOpenStateChange.bind(gameHandler),\n              proposeGameEnd: gameHandler.proposeGameEnd.bind(gameHandler)\n            }\n          }\n  };\n};\n\nexport default useGameHandler;\n","import React, { useEffect } from \"react\";\nimport { useRoutes, navigate, usePath } from \"hookrouter\";\nimport Navigation from \"./components/Navigation\";\nimport MetaTags from \"./components/MetaTags\";\nimport PageSizeWrapper from \"./components/PageSizeWrapper\";\nimport Home from \"./pages/Home\";\nimport Funds from \"./pages/Funds\";\nimport Bank from \"./pages/Bank\";\nimport History from \"./pages/History\";\nimport Settings from \"./pages/Settings\";\nimport Join from \"./pages/Join\";\nimport { routePaths } from \"./constants\";\nimport useStoredGames from \"./hooks/useStoredGames\";\nimport useGameHandler from \"./hooks/useGameHandler\";\n\nconst wrapRoute = (route: string, child: JSX.Element) => (\n  <MetaTags route={route}>\n    <PageSizeWrapper>{child}</PageSizeWrapper>\n  </MetaTags>\n);\n\nconst App: React.FC = () => {\n  const { storeGame } = useStoredGames();\n  const { game, authInfo, initialize, clear } = useGameHandler();\n  const path = usePath();\n\n  // If the user has gone to a non-game route, clear the game state\n  useEffect(() => {\n    if (path === routePaths.home || path === routePaths.join || path === routePaths.newGame) {\n      onGameDestroy();\n    }\n  }, [path]);\n\n  // If the user has gone to a route that we don't manage, go home\n  useEffect(() => {\n    if (Object.values(routePaths).indexOf(path) === -1) {\n      navigate(\"/\");\n    }\n  }, [path]);\n\n  // Navigate home when a game is ended\n  useEffect(() => {\n    if (game === null) {\n      navigate(\"/\");\n    }\n  }, [game]);\n\n  const onGameSetup = (gameId: string, userToken: string, playerId: string) => {\n    // Save current game for potential later use\n    if (authInfo !== null) {\n      storeGame(authInfo.gameId, authInfo.userToken, authInfo.playerId);\n    }\n\n    // Setup a new game handler by setting up auth\n    initialize({ gameId, userToken, playerId });\n\n    // Store new game details\n    storeGame(gameId, userToken, playerId);\n\n    // Go into game\n    navigate(\"/funds\");\n  };\n\n  const onGameDestroy = () => {\n    if (authInfo !== null) {\n      storeGame(authInfo.gameId, authInfo.userToken, authInfo.playerId);\n    }\n    clear();\n  };\n\n  // Using Home as a \"not found\" component will put us back in the right place\n  const NotFound = () => <Home onGameSetup={onGameSetup} />;\n\n  const routes = {\n    [routePaths.home]: () => wrapRoute(routePaths.home, <Home onGameSetup={onGameSetup} />),\n    [routePaths.join]: () =>\n      wrapRoute(routePaths.join, <Join newGame={false} onGameSetup={onGameSetup} />),\n    [routePaths.newGame]: () =>\n      wrapRoute(routePaths.newGame, <Join newGame={true} onGameSetup={onGameSetup} />),\n    [routePaths.funds]:\n      game !== null\n        ? () =>\n            wrapRoute(\n              routePaths.funds,\n              <Funds\n                gameId={game.gameId}\n                playerId={game.playerId}\n                isGameOpen={game.open}\n                players={game.players}\n                freeParkingBalance={game.freeParkingBalance}\n                proposeTransaction={game.actions.proposeTransaction}\n              />\n            )\n        : () => <NotFound />,\n    [routePaths.bank]:\n      game !== null && game.isBanker\n        ? () =>\n            wrapRoute(\n              routePaths.bank,\n              <Bank\n                players={game.players}\n                freeParkingBalance={game.freeParkingBalance}\n                hasATransactionBeenMade={\n                  game.events.filter((e) => e.type === \"transaction\").length > 0\n                }\n                proposeTransaction={game.actions.proposeTransaction}\n              />\n            )\n        : () => <NotFound />,\n    [routePaths.history]:\n      game !== null\n        ? () => wrapRoute(routePaths.history, <History events={game.events} />)\n        : () => <NotFound />,\n    [routePaths.settings]:\n      game !== null && game.isBanker\n        ? () =>\n            wrapRoute(\n              routePaths.settings,\n              <Settings\n                isGameOpen={game.open}\n                players={game.players}\n                proposePlayerNameChange={game.actions.proposePlayerNameChange}\n                proposePlayerDelete={game.actions.proposePlayerDelete}\n                proposeGameOpenStateChange={game.actions.proposeGameOpenStateChange}\n                proposeGameEnd={game.actions.proposeGameEnd}\n              />\n            )\n        : () => <NotFound />\n  };\n\n  const routeResult = useRoutes(routes);\n\n  return (\n    <>\n      <Navigation inGame={game !== null} isBanker={game?.isBanker ?? false} />\n      <div className=\"my-3\">{routeResult || <NotFound />}</div>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { ModalProvider } from \"react-modal-hook\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <ModalProvider>\n    <App />\n  </ModalProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst state_1 = require(\"./state\");\nexports.defaultGameState = state_1.defaultGameState;\nexports.calculateGameState = state_1.calculateGameState;\n//# sourceMappingURL=index.js.map","module.exports = __webpack_public_path__ + \"static/media/banner.6db68e8e.png\";"],"sourceRoot":""}